version: "3.7"

services:
  config-server:
    image: config-server:1.0-SNAPSHOT
    container_name: config-server
    # 项目中运行
    volumes:
      - ./:/mnt
    command: ["java", "-jar", "/usr/share/cloud-services/server.jar"]
    ports:
      - 8891:8891

  dubbo-provider:
    image: dubbo-provider:1.0-SNAPSHOT
    container_name: dubbo-provider
    volumes:
      - ./:/mnt
    # 执行命令验证配置服务已经启动
    command: ["./usr/share/wait-for-it.sh", "-t", "0", "config-server:8891", "--", "java", "-jar", "/usr/share/cloud-services/provider.jar"]
    # 依赖于config-server，后于config-server启动
    depends_on:
      - config-server

  dubbo-consumer:
    image: dubbo-consumer:1.0-SNAPSHOT
    container_name: dubbo-consumer
    # 运行docker命令
#    command: bash -c "mvn -pl dubbo-consumer dockerfile:build"
    # 暴露本地端口
#    ports:
#      - 8090:8090
    # 可以以localhost方式访问
    # 挂在磁盘
    volumes:
      - ./:/mnt
    command: ["./usr/share/wait-for-it.sh", "-t", "0", "config-server:8891", "--", "java", "-jar", "/usr/share/cloud-services/consumer.jar"]
    ports:
      - 8090:8090
    depends_on:
      - config-server
      - dubbo-provider


networks:
  default:
    # Use a custom driver
    name: cloud-services
    driver: bridge